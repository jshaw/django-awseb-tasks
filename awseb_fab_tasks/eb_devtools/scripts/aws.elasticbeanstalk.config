#!/usr/bin/env python

# -*-python-*-

# Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights
# Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You
# may not use this file except in compliance with the License. A copy
# of the License is located at
#
# http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
# ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the
# License.

import os
from aws.elastic_beanstalk_config import ElasticBeanstalkConfig


def prompt(updated_settings, message, field, default=None):
    if default:
        message += " [default to {0}]".format(default)
    message += ": "
    val = raw_input(message)
    if val.strip():
        updated_settings[field] = val
    elif default:
        updated_settings[field] = default


SCRIPTS_BASE_PATH = os.path.realpath(os.path.dirname(__file__))
with open(os.path.join(SCRIPTS_BASE_PATH, 'aws.credentials_format.txt')) as f:
    credential_format = f.read()


if __name__ == "__main__":
    changed_settings = {}
    config = ElasticBeanstalkConfig(os.getcwd())

    # Should never need to execute, since file should be set prior
    if config.should_write_credential_file():
        #raise Exception("Credentials are missing.")
        prompt(changed_settings, "AWS Access Key", "access_key_id")
        prompt(changed_settings, "AWS Secret Key", "secret_access_key")

    if config.eb_default("region"):
        prompt(changed_settings, "AWS Region", "region", config.eb_default("region"))
    else:
        prompt(changed_settings, "AWS Region", "region", "us-east-1")

    default_host = config.dev_tools_endpoint_default(changed_settings["region"])
    if not default_host:  # Means region is unrecognized
        prompt(" AWS Host", "dev_tools_endpoint", config.dev_tools_endpoint_default("us-east-1"))
    else:  # Always set the endpoint
        changed_settings["dev_tools_endpoint"] = default_host

    prompt(changed_settings, "AWS Elastic Beanstalk Application", "application_name",
           config.eb_default("application_name"))
    prompt(changed_settings, "AWS Elastic Beanstalk Environment", "environment_name",
           config.eb_default("environment_name"))
    prompt(changed_settings, "AWS Elastic Beanstalk Platform", "application_platform",
           config.eb_default("application_platform") or 'Python 2.7')
    prompt(changed_settings, "AWS EC2 Key Pair", "ec2_key_name",
           config.eb_default("ec2_key_name"))

    config.write_settings(changed_settings)

    if config.credential_file_configured() or config.credential_file_exists():
        print """\nNOTE: The "git aws.push" command uses the AWS credentials that are in
the following file:\n\n{0}\n""".format(config.credential_file_path)

        msg = None
        if config.access_key() and config.secret_key():
            msg = """To use different AWS credentials, edit the credentials file or edit the
".elasticbeanstalk/config" file to reference a different file. The
credentials file must use the following format:\n\n{0}\n""".format(credential_format)

        elif not config.credential_file_exists():
            msg = """This AWS credentials file doesn't exist. Create a credentials file or
edit the ".elasticbeanstalk/config" file to reference a file. The
credentials file must use the following format:\n\n{0}\n""".format(credential_format)

        elif not config.credential_file_readable():
            msg = """This AWS credentials file is not readable. Grant read permissions to
the file or edit the ".elasticbeanstalk/config" configuration file to
reference a different file. The credentials file must use the following
format:\n\n{0}\n""".format(credential_format)

        else:
            msg = """This AWS Credentials file doesn't contain a full set of credentials or
the credentials are not formatted correctly. Edit the credentials file
or edit the ".elasticbeanstalk/config" file to reference a different
file. The credentials file must use the following format:\n\n{0}\n""".format(credential_format)

        print msg

    elif not os.environ["HOME"]:
        msg = """NOTE: No AWS credentials were provided. To create an AWS credentials
file for the "git aws.push" command, use the following format:\n\n{0}\n
To reference the credentials file, add the following line to your
".elasticbeanstalk/config" configuration file:
 
AwsCredentialFile=file_path

""".format(credential_format)

        print msg
# If we get here, the user has been prompted for credentials and 
# they've been written to the default location (~/.boto)
